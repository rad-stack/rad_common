= turbo_frame_tag 'report_columns_section' do
  :ruby
    config = custom_report.configuration || {}
    joins = custom_report.joins || []
    columns = custom_report.columns || []
    all_columns = model_columns(custom_report.report_model, joins)
    columns_by_table = model_columns_by_table(custom_report.report_model, joins)
    # Build keys using select clause if available, otherwise use table.column format
    selected_column_keys = columns.map { |c| c['select'] }

  .row
    .col-md-6
      %h6.mb-2
        Available Columns
      .card.shadow-sm
        .card-body.p-0
          .row.g-0
            .col-4.border-end.bg-light
              .list-group.list-group-flush.report-builder-tables-list{ role: 'tablist' }
                - columns_by_table.each_with_index do |(table_info, cols), index|
                  - table_id = "table-#{table_info[:table].gsub('_', '-')}"
                  - is_base_table = table_info[:association].nil?
                  %button.list-group-item.list-group-item-action.py-3.px-3.text-start.border-0.fw-medium{ type: 'button',
                                                                                                           class: is_base_table ? 'active' : '',
                                                                                                           role: 'tab',
                                                                                                           data: { bs_toggle: 'tab',
                                                                                                                   bs_target: "#columns-#{table_id}" },
                                                                                                           aria: { controls: "columns-#{table_id}",
                                                                                                                   selected: is_base_table.to_s } }
                    %i.fa.fa-table.me-2.text-muted
                    = table_info[:label]
            .col-8
              .tab-content.report-builder-tables-list.p-3
                - columns_by_table.each do |table_info, cols|
                  - table_id = "table-#{table_info[:table].gsub('_', '-')}"
                  - is_base_table = table_info[:association].nil?
                  .tab-pane.fade{ id: "columns-#{table_id}",
                                  class: is_base_table ? 'show active' : '',
                                  role: 'tabpanel' }
                    %table.table.table-sm.table-hover.mb-0
                      %tbody{ id: "available-columns-#{table_id}" }
                        - cols.each do |col|
                          - select_prefix = col[:association].present? ? col[:association] : col[:table]
                          - column_key = "#{select_prefix}.#{col[:name]}"
                          - next if selected_column_keys.include?(column_key)

                          = render 'available_column_row', column: col, table_id: table_id

    .col-md-6
      %h6.mb-2
        Selected Columns
        - selected_columns_config = config['columns'] || []
      .card.shadow-sm
        .card-body.p-3
          .report-builder-tables-list
            %table.table.table-hover.mb-0
              %tbody#selectedColumnsList{ data: { report_builder_target: 'selectedColumnsList' } }
                - selected_columns_config.each do |col_config|
                  :ruby
                    select_prefix = col_config['select']&.split('.')&.first
                    col_name = col_config['name']
                    col = all_columns.find { |c| c[:name] == col_name && (c[:association] == select_prefix || c[:table] == select_prefix) }
                    next if col.blank?

                    table_id = "table-#{col[:table].gsub('_', '-')}"
                    col_with_label = col.merge(custom_label: col_config['label'])
                    formula = col_config['formula']

                  = render 'selected_column_row', column: col_with_label, table_id: table_id, formula: formula
