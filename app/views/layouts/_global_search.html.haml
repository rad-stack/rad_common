- if user_signed_in? && current_user
  - search_scopes = GlobalSearch.new(current_user, :global_search).filtered_scopes

  - if search_scopes.any?
    - initial_scope = search_scopes.first
    .global-search-group
      .input-group{ 'data-controller': 'global-search',
                    'data-global-search-initial-scope-value': initial_scope.to_json }
        .input-group-prepend
          %span.input-group-text.global-search-dropdown
            .nav-item.dropdown
              %a.nav-link.dropdown-toggle.text-dark.p-0{ 'data-toggle': 'dropdown', href: '#' }
                %span.search-options{ 'aria-expanded': 'true', 'data-toggle': 'dropdown' }
                  = icon('magnifying-glass')

              %ul.dropdown-menu
                - search_scopes.each_with_index do |scope, index|
                  %li{ role: 'presentation', class: index.zero? ? 'selected-search' : '' }
                    %a.dropdown-item.search-option{ href: '#',
                                                    role: 'menuitem',
                                                    tabindex: '-1',
                                                    'data-action': 'click->global-search#setScope',
                                                    'data-search-scope': scope[:name] }= scope[:description]

          = text_field_tag :search,
                           nil,
                           'data-placeholder': initial_scope[:description],
                           'data-global-search-target': 'input',
                           'data-global-search-scope': initial_scope[:name],
                           class: 'global-search-select mb-0'
        .input-group-append
          %span.input-group-text

            %span{ class: 'fa fa-globe',
                   data: { toggle: 'tooltip', placement: 'top' },
                   title: 'Super search takes longer than scoped search.' }

            %input.super_search.ml-2{ type: 'checkbox',
                                      name:
                                      'super_search',
                                      data: { 'global-search-target': 'superSearch',
                                              action: 'change->global-search#toggleSuperSearch' } }
            %input.global_search_id{ type: 'hidden', name: 'global_search_id' }
            %input.global_search_model_name{ type: 'hidden', name: 'global_search_model_name' }
            %input.global_search_scope{ type: 'hidden',
                                        name: 'global_search_scope',
                                        value: initial_scope[:name],
                                        data: { 'global-search-target': 'scope' } }
