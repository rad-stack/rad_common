- unless defined?(sort_columns)
  - sort_columns = search.sort_columns

- sort_columns.each do |sort_column|
  %th
    - if sort_column[:column]
      :ruby
        direction = sort_column[:column] == search.sort_column && search.sort_direction == 'asc' ? 'desc' : 'asc'
        label = sort_column[:label] || sort_column[:column].titleize
        search_params = { search: search.search_params.merge({ sort: sort_column[:column], direction: direction }) }

      - case search.class.to_s
      - when 'RadAuditSearch'
        = link_to label, "/rad_common/audits?#{search_params.to_query}"
      - when 'LoginActivitySearch'
        = link_to label, "/rad_common/login_activities?#{search_params.to_query}"
      - when 'TwilioLogSearch'
        = link_to label, "/rad_common/twilio_logs?#{search_params.to_query}"
      - else
        = link_to label, search_params

      - if sort_column[:column] == search.sort_column
        - icon = search.sort_direction == 'asc' ? 'fa fa-arrow-up' : 'fa fa-arrow-down'
        = tag.i '', class: "#{icon} ml-1"
    - else
      = sort_column[:label]
      - if sort_column.has_key? :expandable
        %button.btn.btn-primary{ type: 'button',
                                 class: "toggle-#{sort_column[:expandable][:target][1..-1]}",
                                 'data-toggle': 'collapse',
                                 'data-target': sort_column[:expandable][:target],
                                 'aria-expanded': sort_column[:expandable][:expanded] || false }
          %span.expand-label.mr-1= sort_column[:expandable][sort_column[:expandable][:expanded] ? :close : :open]
          %i.icon.fas{ class: "fa-caret-#{sort_column[:expandable][:expanded] ? 'up' : 'down'}" }
        :javascript
          $(document).ready(function() {
            $('.toggle-#{sort_column[:expandable][:target][1..-1]}').on('click', function() {
              const $btn = $(this);
              const $header = $btn.closest('th');
              const $dataTarget = $('#{sort_column[:expandable][:target]}');
              const width = '#{sort_column[:expandable][:width]}';

              $btn.find('.icon').toggleClass('fa-caret-up fa-caret-down');

              if ($btn.find('.expand-label').text() == '#{sort_column[:expandable][:open]}') {
                $btn.find('.expand-label').text('#{sort_column[:expandable][:close]}');
                $dataTarget.siblings('.expanded').addClass('d-none');
                if (width.length > 0) {
                  $header.css('min-width', width);
                }
              } else {
                $btn.find('.expand-label').text('#{sort_column[:expandable][:open]}');
                $dataTarget.siblings('.expanded').removeClass('d-none');
                if (width.length > 0) {
                  $header.css('min-width', 'unset');
                }
              }
            });
          });
