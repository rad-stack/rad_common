- if (search.search_params? && search.invalid?) || search.saved_filter_errors.present?
  - flash.now[:error] = search.error_messages
= simple_form_for :search, url: path, method: :get do |f|
  -# TODO: Set up permanent page size selection solution
  - if params[:page_size].present?
    = hidden_field_tag :page_size, params[:page_size]
  - search.filters.each_slice(5) do |filters|
    .row
      - col_class = filters.count > 2 ? 'col-lg' : 'col-lg-4'
      - filters.each do |filter|
        %div{ class: "#{col_class} #{filter_col_class(filter)}" }
          = render "layouts/filter_#{filter.filter_view}", filter: filter, search: search, f: f
  .form-actions
    = f.button :button, class: 'btn btn-success' do
      %i.fa.fa-filter
      Apply Filters
    - if RadicalConfig.saved_search_filters_enabled?
      = render 'layouts/saved_filters_dropdown', search: search, f: f, path: path
    \
    = link_to "#{path}?clear_filters=true", class: 'btn btn-danger' do
      %i.fa.fa-times
      Clear Filters

  - if RadicalConfig.saved_search_filters_enabled?
    - if search.applied_saved_filter.present?
      .text-muted.mt-1 Applied Filter: #{search.applied_saved_filter}
    = f.hidden_field :saved_name
  - else
    %br
  %br
  - if defined? paged_results
    = render 'layouts/paging', paged_results: paged_results, f: f, search: search
