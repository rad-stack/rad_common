name: RSpec Tests

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  RAILS_ENV: test
  CI: true

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      total_groups: ${{ steps.set-matrix.outputs.total_groups }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read & Parse Matrix Configuration
        id: set-matrix
        run: |
          content=$(cat .github/actions/custom_matrix.json)
          matrix=$(echo "$content" | jq -c .)
          total_groups=$(echo "$content" | jq '[.include[].GROUP[]] | unique | length')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
          echo "total_groups=$total_groups" >> $GITHUB_OUTPUT

  tests:
    runs-on: ubuntu-latest
    needs: setup-matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-matrix.outputs.matrix)}}

    env:
      TEST_ENV_NUMBER: ${{ matrix.TEST_ENV_NUMBER }}

    services:
      postgres:
        image: pgvector/pgvector:pg17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rad_common_test${{ matrix.TEST_ENV_NUMBER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      sftp:
          image: atmoz/sftp
          env:
              SFTP_USERS: "sftp_user:password:::sftp_user"
          ports:
              - 2222:22

    steps:
      - uses: actions/checkout@v4

      - name: Running custom steps
        uses: ./.github/actions/custom-action

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.set-ruby-version.outputs.version }}
          bundler-cache: true

      - name: Set up Vips
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips-dev pkg-config

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'
          cache: 'yarn'

      - name: Yarn install
        working-directory: spec/dummy
        run: yarn install

      - name: Prepare database
        working-directory: spec/dummy
        run: |
          bundle exec rails db:test:prepare

      - name: Compile esbuild assets
        working-directory: spec/dummy
        run: |
          yarn build
          bundle exec bin/rails assets:precompile

      - name: Load schema
        working-directory: spec/dummy
        run: |
          if [ "${{ needs.setup-matrix.outputs.total_groups }}" == "1" ]; then
            bundle exec rake db:schema:load
          else
            bundle exec rake parallel:load_schema
          fi

      - name: Run RSpec tests
        run: |
          if [ "${{ needs.setup-matrix.outputs.total_groups }}" == "1" ]; then
            script -q -e -c "bin/rc_rspec" /dev/null
          else
            script -q -e -c "bundle exec parallel_rspec spec --exclude-pattern 'templates/rspec/*.*' -n ${{ needs.setup-matrix.outputs.total_groups }} --only-group ${{join(matrix.GROUP, ',')}}" /dev/null
          fi

      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-screenshots-${{ matrix.TEST_ENV_NUMBER }}
          path: tmp/capybara/**/*
